async function fetchReportData(t){try{const e=await fetch(`/uploads/nessus/${t}_betdsi.json`);return await e.json()}catch(t){return console.error("Error fetching data:",t),null}}function generateTopAlertsTable(t){if(!t||!t.alert_report||!Array.isArray(t.alert_report))return void console.error("Invalid data format:",t);const e=t.alert_report.filter((t=>["Critical","High","Medium"].includes(t.risk_category))),r={};e.forEach((t=>{const{subject:e,risk_category:a}=t,o=`${e}_${a}`;r[o]=(r[o]||0)+1}));const a=Object.keys(r).map((t=>{const[e,a]=t.split("_");return{subject:e,risk_category:a,count:r[t]}}));a.sort(((t,e)=>e.count-t.count));let o='<table class="table table-striped">';o+="<tr><th>Vulnerability Name</th><th>Risk Category</th><th>Count</th></tr>";for(let t=0;t<Math.min(a.length,10);t++){let e;switch(a[t].risk_category){case"Critical":e="rgba(112,48,160,0.5)";break;case"High":e="rgba(192,1,0,0.5)";break;case"Medium":e="rgba(255,153,50,0.5)";break;case"Low":e="rgba(255,204,3,0.5)";break;case"Informational":e="rgba(153,204,2,0.5)";break;default:e=""}o+=`<tr><td>${a[t].subject}</td><td style="background-color: ${e}">${a[t].risk_category}</td><td>${a[t].count}</td></tr>`}o+="</table>",document.getElementById("top_alerts").innerHTML=o}function handleRadioButtonChange(t){fetchReportData(t.target.value).then((t=>{t&&generateTopAlertsTable(t)}))}const radios=document.querySelectorAll('input[type="radio"]');radios.forEach((t=>{t.addEventListener("change",handleRadioButtonChange)})),window.addEventListener("load",(()=>{const t=document.querySelector('input[type="radio"]:first-of-type');t&&(t.checked=!0,t.dispatchEvent(new Event("change")))}));